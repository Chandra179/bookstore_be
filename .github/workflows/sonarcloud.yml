name: SonarCloud analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  # -----------------------------------------------
  # Application Static code analysis with SonarQube
  # -----------------------------------------------
  static-analysis:
    name: Static Analysis - SonarQube
    runs-on: ubuntu-latest
    timeout-minutes: 60
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: alexandria_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # THIS IS NEEDED HERE (Sonar needs full history for BLAME)
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: "17"
          architecture: x64
          distribution: "corretto"
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: |
            ~/.m2/repository
            ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Connect to PostgreSQL
        run: >
          mvn flyway:migrate -Dflyway.url=jdbc:postgresql://localhost:5432/alexandria_test -Dflyway.user=postgres -Dflyway.password=postgres
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Chandra179_OnlineBookStore-BE
