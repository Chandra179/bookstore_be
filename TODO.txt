SECURITY JWT (EMAIL, PW) accesstoken 7 days until refresh token implemented
books product tag
- new, best seller, discount, no need to store it in database
  we determine the tag by checking like upload date, order count, etc.
inventory
flow
 - homepage
     a. list of genre A-Z        -> see all -> /alexandria/documentary
     b. new release              -> see all -> /alexandria/new-release
     c. best seller of all genre -> see all -> /alexandria/best-seller
     d. best seller per genre    -> see all -> /alexandria/fiction/best-seller
     e. upcoming books ->        -> see all -> /alexandria/upcoming-books
 - search by
     a. title & genre -> /alexandria/fiction/the-alchemist
 - cart
     what if like i use cache to store user cart item,
     and to keep sync with item in database, i will get the items stock/qty, so whenever user want
     to add another item and stock is empty, the buy button for that item will be disabled,
     of course maybe in frontend will need to automatically
     refresh the page to update the display of item qty.
 - book detail
     a. show : book_image
               title
               book_stock (10 items left)
               -(30)+  Set inventory thresholds min/max items user can add item, so the product is not oversold
                       maybe limit the number of product by weight? like max items weight is 50kg
                       determine by seller or delivery vendor, ex: vendor only allowed max 100kg for each delivery
     b. click: -> add to cart -> store items in cache -> buy now
               -> check current item in cache and compare it with current item stock
               -> if item in cache less than current item stock
               -> than cannot proceed to buy, user must be update item qty
               -> than when we submit the order this step should be occured
                  -> reserved the item, not decrease the item in warehouse (or maybe not???)
                     then after payment succeed, release the reserve items, than decrease the item in warehouse
                     the pros of this approach is that the item is reserved before the payment
                     so items will be decreased when user click the "submit-order-button" (order process)
                     not when user click "pay" (payment process)
                     the cons is that, if the user is not pay the items ASAP, the items will remain out of stock
                     and still reserved (need to adjust limit time to pay, like 15/30 minutes)
                  -> if not then, if multiple user by the same item, and the item is out of stock and there
                     are still some user in "payment-loading-success (already complete payment)" BUT... the item is OUT OF STOCK
                     then we need to REFUND the user payment, need to integrate payment <-> warehouse
                     like we need to track complete order by date, case: 5th user success buy, but 6th user also success
                     but the stock is empty then we need to proceed to REFUND
               buy now -> same as above, the difference is we not store the items in cache
